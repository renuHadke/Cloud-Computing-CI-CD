{
"Description" : "Creation of Stack for Assignment 6",
"AWSTemplateFormatVersion" : "2010-09-09",

"Parameters" : {
  "stackname" : {
    "Description" : "Stack Name",
    "Type" : "String",
    "Default" : "stack01"
  },
  "dbsubnet" : {
    "Description" : "DB Subnet Group name",
    "Type" : "String"
  },
  "s3domain" : {
    "Description" : "S3 name",
    "Type" : "String"
  },
  "ec2Subnet" : {
    "Description" : "Subnet ID for EC2",
    "Type" : "String"
  },
  "ec2SecurityGroup" : {
    "Description" : "Resource ID for EC2 Security Group",
    "Type" : "String"
  },
  "dbSecurityGroupId" : {
    "Description" : "Resource ID for DB Security Group",
    "Type" : "String"
  },
  "iaminstance" : {
    "Description" : "Instance Profile Name for CodeDeploy to S3",
    "Type" : "String"
  }
},
"Resources": {
  "EC2Instance": {
    "Type": "AWS::EC2::Instance",
    "Metadata" : {
      "AWS::CloudFormation::Init" : {
        "configSets" : {
        "execOrder" : [ "config1" , "config2","config3" ]
        },
        "config1" : {
            "commands" : {
                "test" : {
                    "command" : "echo \"$CFNTEST\" > testlog.txt",
                    "env" : { "CFNTEST" : "I come from config1 in user data. Yayy!! I worked! ::: START" },
                    "cwd" : "/var"
                }
              }
        },
        "config2" : {
            "commands" : {
                "test" : {
                  "command" : "echo \"$CFNTEST\" >> testlog.txt",
                  "env" : { "CFNTEST" : "webapp dir created!" },
                  "cwd" : "/var",
                  "test" : "mkdir -p webapp",
                  "ignoreErrors" : "false"
                }
            }
        },
        "config3" : {
            "files" : {
                "/var/webapp/.env" : {
                  "content" : { "Fn::Join" : [ "", [
                    "NODE_ENV=development\n",
                    "BUCKET=", {"Ref" : "s3domain"}, "\n",
                    "DB_HOST=", {"Fn::GetAtt": ["RDSDB","Endpoint.Address"]}, "\n",
                    "DB_PORT=", {"Fn::GetAtt": ["RDSDB","Endpoint.Port"]}, "\n",
                    "DB_USER=csye6225master\n",
                    "DB_PASS=csye6225password\n",
                    "DB_NAME=csye6225\n"
                    ]]},
                  "mode"  : "000644",
                  "owner" : "ubuntu"
                }
            }
        }
      }
    },
    "Properties": {
        "ImageId": "ami-66506c1c",
        "InstanceType": "t2.micro",
        "DisableApiTermination": "False",
        "SecurityGroupIds": [{"Ref" : "ec2SecurityGroup"}],
        "KeyName": "csye6225",
        "SubnetId": {"Ref": "ec2Subnet"},
        "Tenancy": "default",
        "IamInstanceProfile": {"Ref":"iaminstance"},
        "Tags": [{"Key" : "Name", "Value" : "MyEC2Instance"}],
        "BlockDeviceMappings" : [
        {
          "DeviceName" : "/dev/sda1",
          "Ebs" : {
                    "DeleteOnTermination": true,
                    "VolumeSize": 16,
                    "VolumeType": "gp2"
                  }
        }],
        "UserData": {
            "Fn::Base64": {
                "Fn::Join": [
                    "",
                    [
                        "#!/bin/bash -xe \n",
                        "sudo apt-get update \n",
                        "sudo apt-get install openjdk-8-jdk -y\n",
                        "sudo apt-get install ruby -y \n",
                        "sudo apt-get install wget -y \n",
                        "sudo apt-get install python -y \n",

                        "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1 \n",
                        "curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - \n",
                        "sudo apt-get install -y nodejs \n",
                        "sudo apt-get install -y build-essential \n",

                        "# Install the files and packages from the metadata\n",
                        "/opt/aws/bin/cfn-init -v ",
                        "--stack ", { "Ref" : "AWS::StackName" },
                        "--resource EC2Instance ",
                        "--configsets execOrder ",
                        "--region ", { "Ref" : "AWS::Region" }, "\n",

                        "sudo apt-get update \n",
                        "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
                        "sudo chmod +x ./install \n",
                        "sudo ./install auto \n",
                        "sudo service codedeploy-agent start \n",
                        "sudo service codedeploy-agent status"
                    ]
                ]
            }
        },
        "DependsOn" : "RDSDB"
      }
  },
  "S3" : {
  "Type" : "AWS::S3::Bucket",
  "Properties" : {
    "BucketName" : {"Ref" : "s3domain"},
  }
  },
  "DynamoDBTable": {
  "Type" : "AWS::DynamoDB::Table",
  "Properties" : {
    "AttributeDefinitions" : [ {"AttributeName" : "id", "AttributeType" : "S"}],
    "KeySchema" : [ {"AttributeName" : "id", "KeyType" : "HASH"} ],
    "ProvisionedThroughput" : {
      "ReadCapacityUnits" : 5,
      "WriteCapacityUnits" : 5
    },
    "TableName": {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-dynamodb-table"]] }
  }
  },
  "RDSDB" :   {
    "Type" : "AWS::RDS::DBInstance",
    "Properties" :
      {
        "AllocatedStorage" : "5",
        "DBInstanceClass" : "db.t2.medium",
        "DBInstanceIdentifier" : {"Fn::Join" : ["",[{"Ref" : "stackname"},"-csye6225-RDS-DB"]] },
        "DBName" : "csye6225",
        "DBSubnetGroupName" :{"Ref" : "dbsubnet"},
        "Engine" : "mysql",
        "EngineVersion" : "5.6.37",
        "MasterUsername" : "csye6225master",
        "MasterUserPassword" : "csye6225password",
        "MultiAZ" : "false",
        "PubliclyAccessible" : "false",
        "VPCSecurityGroups": [{"Ref": "dbSecurityGroupId"}]
      }
  }
},
"Outputs": {
    "InstanceId": {
        "Description": "InstanceId of the newly created EC2 instance",
        "Value": {
            "Ref": "EC2Instance"
        }
    },
    "AZ": {
        "Description": "Availability Zone of the newly created EC2 instance",
        "Value": {
            "Fn::GetAtt": [
                "EC2Instance",
                "AvailabilityZone"
            ]
        }
    }
  }
}
